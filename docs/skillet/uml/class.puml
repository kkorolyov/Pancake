@startuml

package skillet {
	class Skillet {
		save()
		load()
		reload()
	}

	class ComponentFactory {
		Component get()
		Collection<String> getNames()
		boolean contains(String)
		ComponentFactory add(Component, boolean)
		ComponentFactory add(Iterable<Component>, boolean)
		Component remove(String)
	}

	class ResourceHandler {
		Entity load(String)
		save(Entity, String)
	}

	class UIDecorator {

	}
	package decorator {
		UIDecorator <|-- NodeDecorator
		UIDecorator <|-- MenuItemDecorator
		UIDecorator <|-- TabDecorator

		NodeDecorator <|-- RegionDecorator

		RegionDecorator <|-- LabeledDecorator
		RegionDecorator <|-- BorderPaneDecorator
		RegionDecorator <|-- ScrollPaneDecorator

		LabeledDecorator <|--ButtonDecorator
		LabeledDecorator <|-- TitledPaneDecorator
	}

	package ui {
  	interface Panel {
    	Node getRoot()
    }

		package entity {
			class EntityPanel
			class EntityLabel
			class EntityTabPane {
				add(Entity)
				onEntitySelected(Consumer<Entity>)
			}

			Panel <|.. EntityPanel
			Panel <|.. EntityLabel
			Panel <|.. EntityTabPane
		}

		package component {
			class ComponentPanel {
				onComponentRemoveAction(Runnable)
			}

			class ComponentList {
				refreshComponents(Entity)

				onComponentSelected(Consumer<Component>)
			}

			Panel <|.. ComponentPanel
			Panel <|.. ComponentList
		}

		package attribute {
			class AttributePanel

			abstract class ValueDisplayer {
				Node display(Attribute)
				boolean accepts(Class)
			}
			abstract class ValueDisplayers {
				ValueDisplayer getStrategy(Attribute)
			}

			package strategy {
				ValueDisplayer <|-- NumberDisplayer
				ValueDisplayer <|-- StringDisplayer
				ValueDisplayer <|-- MapDisplayer
				ValueDisplayer <|-- URIDisplayer
			}

			ValueDisplayers o-- "*" ValueDisplayer

			Panel <|.. AttributePanel

			AttributePanel --> ValueDisplayers
		}
  }

	Skillet --> ResourceHandler
  Skillet --> ComponentFactory
  Skillet --> EntityTabPane
  Skillet --> ComponentList
}

@enduml
