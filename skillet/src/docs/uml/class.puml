@startuml

package dev.kkorolyov.pancake.skillet {
	class Skillet {
		save()
		load()
		reload()
	}

	package data {
		abstract class DataObservable<T> {
		}
		interface DataChangeListener {
		}

		class Entity {
		}
		class Component {
		}
		class Attribute {
			Object value
		}

		class ComponentFactory {
		}

		DataObservable o-l- "*" DataChangeListener

		DataObservable <|-- Entity
		DataObservable <|-- Component
		DataObservable <|-- Attribute

		Entity *-- "*" Component
		Component *-- "*" Attribute

		ComponentFactory o-- "*" Component
	}

	package display {
  	interface Display {
    	Node getRoot()
    }

    class EntityDisplay {
    }
    class ComponentDisplay {
    }
    class AttributeDisplay {
    }

    interface DisplayStrategy {
    	Node display(Attribute)
    }
    DisplayStrategy <|.. NumberDisplayStrategy
    DisplayStrategy <|.. TextDisplayStrategy
    DisplayStrategy <|.. ImageDisplayStrategy
    DisplayStrategy <|.. MapDisplayStrategy

    Display <|.. EntityDisplay
		Display <|.. ComponentDisplay
		Display <|.. AttributeDisplay

		AttributeDisplay *-- "1" DisplayStrategy
  }

  package utility {
		class DisplayTransformer {
		}

  	class UIDecorator {
  	}
  }

  DataChangeListener <|.. EntityDisplay
	DataChangeListener <|.. ComponentDisplay
	DataChangeListener <|.. AttributeDisplay

  EntityDisplay o-- "1" Entity
  ComponentDisplay o-- "1" Component
  AttributeDisplay o-- "1" Attribute

  Skillet --> EntityDisplay
  Skillet --> ComponentFactory
}

@enduml
