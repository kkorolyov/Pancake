plugins {
	id 'com.gradle.build-scan' version '1.9'
	id 'java-library'
	id 'groovy'
	id 'maven-publish'
	id 'com.jfrog.bintray' version '1.7.3'
}

description = "Extensible Java game engine with an entity-component-system architecture"

buildScan {
	licenseAgreementUrl = 'https://gradle.com/terms-of-service'
	licenseAgree = 'yes'
}

task fulldoc {
	group 'documentation'
	description "Builds deployable documentation"

	def docsDir = "$buildDir/docs"
	def docTasks = subprojects.collect {it.tasks.withType(Javadoc)}

	dependsOn docTasks

	doLast {
		docTasks.each {
			def docTask = it.head()
			def projectName = docTask.getProject().name

			copy {
				from docTask
				into "$docsDir/$projectName"
			}
			println "Copied $projectName project's docs"
		}
		copy {
			from 'docs'
			into docsDir
		}
		println "Copied main docs src"
	}
}

subprojects {
	group = 'dev.kkorolyov'
	version = '1.0'

	repositories {
		mavenLocal()  // TODO For early dev only
		jcenter()  // Most things
		maven {
			url 'https://dl.bintray.com/kkorolyov/java'  // SimpleTools
		}
	}
}

// Projects
def platform = project(':pancake-platform')
def testUtils = project(':pancake-test-utils')
def core = project(':pancake-core')
def skillet = project(':skillet')
def killstreek = project(':killstreek')

configure([	// Testable
		platform,
		core,
		skillet,
		killstreek
]) {
	apply plugin: 'groovy'

	dependencies {
		testImplementation(
				'org.spockframework:spock-core:1.1-groovy-2.+',
				'net.bytebuddy:byte-buddy:1.+',
				'org.objenesis:objenesis:2.+',
				testUtils
		)
	}
}

configure([	// Libraries
		platform,
		core
]) {project ->
	apply plugin: 'java-library'
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.bintray'

	// Artifacts
	task sourceJar(type: Jar) {
		classifier = 'source'
		from sourceSets.main.allJava
	}
	task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}

	// Maven publish
	publishing {
		publications {
			pancake(MavenPublication) {
				from components.java

				artifact sourceJar
				artifact javadocJar
			}
		}
	}
	// Bintray upload
	afterEvaluate {
		bintray {
			user = System.getenv('BINTRAY_USER')
			key = System.getenv('BINTRAY_KEY')
			publications = ['pancake']
			pkg {
				repo = 'java'
				name = project.name
				licenses = ['BSD 3-Clause']
				vcsUrl = 'https://github.com/kkorolyov/Pancake.git'
				version {
					name = project.version
				}
			}
		}
	}

	task releaseLocal(dependsOn: [javadoc, test, publishToMavenLocal]) {
		group 'publishing'
		description "Prepares all release resources and publishes to the local Maven repo"

		doLast {
			println "Released ${project.name}-${project.version} locally"
		}
	}
	task releaseBintray(dependsOn: [releaseLocal, bintrayUpload]) {
		group 'publishing'
		description "Releases to Bintray"

		doLast {
			println "Released ${project.name}-${project.version} to Bintray"
		}
	}
}

configure([	// Applications
    skillet,
		killstreek
]) {
	apply plugin: 'java'
	apply plugin: 'application'	// Run
}

configure([	// Platform-reliant
    core,
		skillet,
		killstreek
]) {
	dependencies {
		implementation platform
	}
}
configure([	// Core-reliant
    killstreek
]) {
	dependencies {
		implementation core
	}
}

project(':pancake-platform') {
	description = "Main Pancake engine platform"

	dependencies {
		api(
				'dev.kkorolyov:simple-logs:3.+',
				'dev.kkorolyov:simple-props:4.+',
				'dev.kkorolyov:simple-files:1.+'
		)
	}
}
project(':pancake-test-utils') {
	apply plugin: 'groovy'
	description = "Test utilities"

	dependencies {
		implementation(
				'org.spockframework:spock-core:1.1-groovy-2.+',
				platform
		)
	}
}

project(':pancake-core') {
	description = "Collection of general, reusable systems and components for the Pancake engine"
}

project(':skillet') {
	description = "Standalone application for designing and exporting entities"

	mainClassName = 'dev.kkorolyov.pancake.skillet.Skillet'
}

project(':killstreek') {
	description = "Top-down ARPG with dynamic RNG system"

	mainClassName = 'dev.kkorolyov.killstreek.Launcher'
}
