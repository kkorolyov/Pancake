buildscript {
	repositories {
		maven {
			url 'https://dl.bintray.com/kkorolyov/groovy'  // FullDoc
		}
	}
	dependencies {
		classpath(
				'dev.kkorolyov:full-doc:1.+',
				'org.jetbrains.kotlin:kotlin-gradle-plugin:1.+'
		)
	}
}
plugins {
	id 'com.gradle.build-scan' version '1.9'
	id 'java-library'
	id 'groovy'
	id 'maven-publish'
	id 'com.jfrog.bintray' version '1.8.0'
	id 'nebula.dependency-lock' version '5.0.6'
}
apply plugin: 'dev.kkorolyov.full-doc'

description = "Extensible Java game engine with an entity-component-system architecture"

buildScan {
	licenseAgreementUrl = 'https://gradle.com/terms-of-service'
	licenseAgree = 'yes'
}

fulldoc {
	src 'docs'
	out "$buildDir/docs"
}

subprojects {
	apply plugin: 'nebula.dependency-lock'

	group = 'dev.kkorolyov'
	version = '0.1'

	repositories {
		mavenLocal()  // FIXME For early dev only
		jcenter()  // Most things
		maven {
			url 'https://dl.bintray.com/kkorolyov/java'  // SimpleTools
		}
	}
}

// Projects
def platform = project(':pancake-platform')
def testUtils = project(':pancake-test-utils')
def core = project(':pancake-core')
def skillet = project(':skillet')
def killstreek = project(':killstreek')

configure(
		[  // Testable
				platform,
				core,
				skillet,
				killstreek
		]
) {
	apply plugin: 'groovy'

	dependencies {
		testImplementation(
				'org.spockframework:spock-core:1.1-groovy-2.+',
				'cglib:cglib-nodep:3.+',
				'org.objenesis:objenesis:1.+',
				'dev.kkorolyov:simple-specs:1.+',
				testUtils
		)
	}
}

configure(
		[  // Libraries
				platform,
				core
		]
) {project ->
	apply plugin: 'java-library'
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.bintray'

	// Artifacts
	task sourceJar(type: Jar) {
		classifier = 'source'
		from sourceSets.main.allJava
	}
	task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}

	// Maven publish
	publishing {
		publications {
			pancake(MavenPublication) {
				from components.java

				artifact sourceJar
				artifact javadocJar
			}
		}
	}
	// Bintray upload
	afterEvaluate {
		bintray {
			user = System.getenv('BINTRAY_USER')
			key = System.getenv('BINTRAY_KEY')

			publications = ['pancake']
			publish = true
			override = true

			pkg {
				repo = 'java'
				name = project.name
				licenses = ['BSD 3-Clause']
				vcsUrl = 'https://github.com/kkorolyov/Pancake.git'
				version {
					name = project.version
				}
			}
		}
	}
}

configure(
		[  // Platform-reliant
				core,
				skillet,
				killstreek
		]
) {
	dependencies {
		implementation platform
	}
}
configure(
		[  // Core-reliant
				killstreek
		]
) {
	dependencies {
		implementation core
	}
}

project(':pancake-platform') {
	description = "Main Pancake engine platform"

	dependencies {
		api(
				'dev.kkorolyov:simple-logs:3.+',
				'dev.kkorolyov:simple-props:4.+',
				'dev.kkorolyov:simple-files:1.+'
		)
	}
}
project(':pancake-test-utils') {
	apply plugin: 'groovy'
	description = "Test utilities"

	dependencies {
		implementation(
				'org.spockframework:spock-core:1.1-groovy-2.+',
				'dev.kkorolyov:simple-specs:1.+',
				platform
		)
	}
}

project(':pancake-core') {
	description = "Collection of general, reusable systems and components for the Pancake engine"
}

project(':skillet') {
	apply plugin: 'kotlin'
	apply plugin: 'application'

	dependencies {
		implementation(
				'org.jetbrains.kotlin:kotlin-stdlib',
				'org.jetbrains.kotlin:kotlin-reflect'
		)
	}

	description = "Standalone application for designing and exporting entities"

	mainClassName = 'dev.kkorolyov.pancake.skillet.Skillet'
}

project(':killstreek') {
	apply plugin: 'java'
	apply plugin: 'application'

	description = "Top-down ARPG with dynamic RNG system"

	mainClassName = 'dev.kkorolyov.killstreek.Launcher'
}
