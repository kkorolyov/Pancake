buildscript {
	repositories {
		maven {
			url 'https://dl.bintray.com/kkorolyov/groovy'
		}
	}
	dependencies {
		classpath 'dev.kkorolyov:auto-snapshot:1.0'
	}
}
plugins {
	id 'groovy'
	id 'maven-publish'
	id 'com.jfrog.bintray' version '1.7.3'
}

description = """Extensible Java game engine with an entity-component-system architecture"""

subprojects {
	apply plugin: 'groovy'
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.bintray'
	apply plugin: 'dev.kkorolyov.auto-snapshot'

	group = 'dev.kkorolyov'
	version = '1.0'

	repositories {
		jcenter()
		maven {
			url 'https://dl.bintray.com/kkorolyov/java'
		}
	}

	dependencies {
		compile 'dev.kkorolyov:simple-logs:3.+',
				'dev.kkorolyov:simple-props:v4.+',
				'dev.kkorolyov:sqlob:3.+'
		testCompile 'org.spockframework:spock-core:1.1-groovy-2.4',
				'net.bytebuddy:byte-buddy:1.7.0',
				'org.objenesis:objenesis:2.5.1'
	}

	test {
		filter.includeTestsMatching '*Spec'
	}

	javadoc {
		destinationDir = file("$rootProject.projectDir/docs/$project.name")
	}

	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allJava
	}
	task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}
	publishing {
		publications {
			Pub(MavenPublication) {
				from components.java
				artifact sourcesJar
				artifact javadocJar
			}
		}
	}
	bintray {
		user = System.getenv('BINTRAY_USER')
		key = System.getenv('BINTRAY_KEY')
		publications = ['Pub']
		pkg {
			repo = 'java'
			name = project.name
			licenses = ['BSD 3-Clause']
			vcsUrl = 'https://github.com/kkorolyov/Pancake.git'
			version {
				name = project.version
			}
		}
	}
}

project(':pancake-platform') {
	description = """Main Pancake engine platform"""
}

project(':pancake-core') {
	description = """Collection of general, reusable systems and components for the Pancake engine"""

	dependencies {
		compile project(':pancake-platform')
		testCompile project(':pancake-platform').sourceSets.test.output	// Access to SpecUtilities
	}
}

project(':test-interactive') {
	apply plugin: 'application'

	description = """Interactive test of platform+core modules"""

	sourceSets.main.resources.srcDirs += project(':pancake-platform').sourceSets.main.resources.srcDirs

	dependencies {
		compile project(':pancake-core')
		runtime sourceSets.main.resources
	}

	mainClassName = 'dev.kkorolyov.pancake.Interactive'
	startScripts.classpath = files('\"') + startScripts.classpath	// Resources must be at head of classpath for some reason
}

project(':killstreek') {
	apply plugin: 'application'

	description = """Top-down ARPG with dynamic RNG system"""

	dependencies {
		compile project(':pancake-core')
		testCompile project(':pancake-platform').sourceSets.test.output	// Access to SpecUtilities
		runtime sourceSets.main.resources
	}

	mainClassName = 'dev.kkorolyov.killstreek.Launcher'
	startScripts.classpath = files('\"') + startScripts.classpath
}
